{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      },
      {
        "datasource": {
          "type": "mysql",
          "uid": "000000005"
        },
        "enable": true,
        "hide": false,
        "iconColor": "rgba(255, 96, 96, 1)",
        "limit": 100,
        "name": "Now",
        "rawQuery": "SELECT\n    CURRENT_TIMESTAMP() as time_sec",
        "showIn": 0,
        "tags": [],
        "type": "tags"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Power [MW]",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "Total"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#AD0317",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "custom.lineWidth",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P01 - prognose"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#B877D9",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P25 - prognose"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "rgb(255, 0, 0)",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P10 - prognose"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#8F3BB8",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "power output {type=\"measurement\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Total"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P05"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "super-light-yellow",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 3
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P10"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P30"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P50"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P70"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P90"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P95"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "super-light-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 0,
        "y": 0
      },
      "id": 47,
      "interval": "15m",
      "links": [],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.3",
      "repeat": "Customer",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "vowSQsa4z"
          },
          "hide": false,
          "query": "from(bucket: \"forecast_latest/autogen\")\r\n  |> range(start: now(), stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"prediction\")\r\n  |> filter(fn: (r) => r.pid == \"${Pid:json}\")\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /quantile_P/ or r[\"_field\"] == \"forecast\")\r\n  |> aggregateWindow(every: 15m, fn: mean, createEmpty: true)\r\n  |> keep(columns: [\"_time\", \"_field\", \"_value\"])",
          "refId": "Forecasts"
        },
        {
          "alias": "",
          "bucketAggs": [
            {
              "field": "@timestamp",
              "id": "2",
              "settings": {
                "interval": "auto"
              },
              "type": "date_histogram"
            }
          ],
          "datasource": {
            "type": "influxdb",
            "uid": "vowSQsa4z"
          },
          "hide": false,
          "metrics": [
            {
              "id": "1",
              "type": "count"
            }
          ],
          "query": "positive_systems = from(bucket: \"realised/autogen\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"power\")\r\n|> filter(fn: (r) => r[\"system\"] =~ /^${Systems:regex}$/ and r[\"system\"] !~ /^${PolarityFactorFlippedSystems:regex}$/)\r\n|> filter(fn: (r) => r._field == \"output\")\r\n|> aggregateWindow(every: 15m, fn: mean, createEmpty: false, timeSrc: \"_stop\")\r\n\r\n// Define helper function for multiplication\r\nmultiplyByX = (x, tables=<-) => tables\r\n    |> map(fn: (r) => ({r with _value: r._value * x}))\r\n\r\nnegative_systems = from(bucket: \"realised/autogen\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"power\")\r\n|> filter(fn: (r) => r[\"system\"] =~ /^${PolarityFactorFlippedSystems:regex}$/)\r\n|> filter(fn: (r) => r._field == \"output\")\r\n|> aggregateWindow(every: 15m, fn: mean, createEmpty: true, timeSrc: \"_stop\")\r\ninverted_negative_systems = negative_systems |> multiplyByX(x: -1.0)  \r\n\r\n// Calculate total\r\ncombined = \r\nunion(tables: [inverted_negative_systems, positive_systems]) \r\n|> drop(columns: [\"system\"]) \r\n|> aggregateWindow(every: 15m, fn: sum, createEmpty: true, timeSrc: \"_start\") \r\n\r\n// Combine and show results\r\nunion(tables: [inverted_negative_systems, positive_systems, combined]) \r\n|> keep(columns: [\"_time\", \"_field\", \"_value\", \"system\"])\r\n",
          "refId": "Load",
          "timeField": "@timestamp"
        }
      ],
      "title": "Total Load - $Prediction_name (pid: $Pid)",
      "transformations": [
        {
          "id": "joinByField",
          "options": {
            "byField": "Time",
            "mode": "outer"
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "output": "Realised",
              "output 1": "Total"
            }
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": "output (.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "vowSQsa4z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "dateTimeFromNow"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 11,
        "y": 0
      },
      "id": 59,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "/^shifted created$/",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "9.5.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "vowSQsa4z"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "power",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"realised/autogen\")\r\n|> range(start: v.timeRangeStart)\r\n|> filter(fn: (r) => r._measurement == \"power\")\r\n|> filter(fn: (r) => r.system =~ /^${Systems:regex}$/)\r\n|> filter(fn: (r) => r._field == \"created\") \r\n|> max()\r\n|> group()\r\n",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "created"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "max"
              },
              {
                "params": [
                  "*1000"
                ],
                "type": "math"
              }
            ]
          ],
          "tags": [
            {
              "key": "system",
              "operator": "=~",
              "value": "/^$Systems$/"
            }
          ]
        }
      ],
      "title": "Last measurement",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "alias": "shifted created",
            "binary": {
              "left": "_value",
              "operator": "*",
              "reducer": "sum",
              "right": "1000"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "elasticsearch",
        "uid": "000000020"
      },
      "description": "Location of the station, determined by the coordinates of one of the systems.",
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 15,
        "y": 0
      },
      "id": 86,
      "links": [],
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div class=\"mapouter\">\n  <div class=\"gmap_canvas\">\n    <iframe width=\"600\" height=\"275\" id=\"gmap_canvas\" src=\"https://maps.google.com/maps?q=$lat%20$lon&t=&z=9&ie=UTF8&iwloc=&output=embed\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe>\n  </div>\n  <style>\n    .mapouter {\n      position: relative;\n      text-align: right;\n      height: 300px;\n      width: 600px;\n    }\n    .gmap_canvas {\n      overflow: hidden;\n      background: none !important;\n      height: 300px;\n      width: 600px;\n    }\n  </style>\n</div>",
        "mode": "html"
      },
      "pluginVersion": "9.5.1",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "elasticsearch",
            "uid": "000000020"
          },
          "refId": "A"
        }
      ],
      "title": "Location $lat, $lon - $Prediction_name (pid: $Pid)",
      "type": "text"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "vowSQsa4z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "dateTimeFromNow"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 11,
        "y": 2
      },
      "id": 22,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "/^Time$/",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "9.5.1",
      "repeat": "Predictions",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "vowSQsa4z"
          },
          "groupBy": [],
          "measurement": "prediction",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "\r\nfrom(bucket: \"forecast_latest/autogen\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"prediction\")\r\n|> filter(fn: (r) => r[\"pid\"] == \"${Pid:json}\")\r\n|> filter(fn: (r) => r._field == \"created\") \r\n|> filter(fn: (r) => r.type != \"est_demand\" and  r.type != \"est_wind\" and  r.type != \"est_pv\")\r\n",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "created"
                ],
                "type": "field"
              },
              {
                "params": [
                  "*1000"
                ],
                "type": "math"
              }
            ]
          ],
          "tags": [
            {
              "key": "pid",
              "operator": "=~",
              "value": "/^$Pid$/"
            }
          ]
        }
      ],
      "title": "Forecast available till",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "alias": "shifted_created",
            "binary": {
              "left": "Time",
              "operator": "*",
              "reducer": "sum",
              "right": "1000"
            },
            "mode": "binary",
            "reduce": {
              "include": [
                "created {customer=\"Wolvega\", pid=\"330\", type=\"demand\"}"
              ],
              "reducer": "max"
            }
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "vowSQsa4z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "dateTimeFromNow"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 11,
        "y": 4
      },
      "id": 20,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "/^created\\*1000$/",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "9.5.1",
      "repeat": "Predictions",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "vowSQsa4z"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "prediction",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "\r\nfrom(bucket: \"forecast_latest/autogen\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"prediction\")\r\n|> filter(fn: (r) => r[\"pid\"] == \"${Pid:json}\")\r\n|> filter(fn: (r) => r._field == \"created\") \r\n|> filter(fn: (r) => r.type != \"est_demand\" and  r.type != \"est_wind\" and  r.type != \"est_pv\")\r\n|> keep(columns: [\"_value\"])\r\n|> max()\r\n|> yield(name: \"max created\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "created"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "max"
              },
              {
                "params": [
                  "*1000"
                ],
                "type": "math"
              }
            ]
          ],
          "tags": [
            {
              "key": "pid",
              "operator": "=~",
              "value": "/^$Pid$/"
            }
          ]
        }
      ],
      "title": "Last update",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "alias": "created*1000",
            "binary": {
              "left": "_value",
              "operator": "*",
              "reducer": "sum",
              "right": "1000"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "vowSQsa4z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "string"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 11,
        "y": 6
      },
      "id": 100,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "uniqueValues"
          ],
          "fields": "/^_value$/",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "9.5.1",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "vowSQsa4z"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "prediction",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"forecast_latest/autogen\")\r\n|> range(start: 24h, stop: 26h)\r\n|> filter(fn: (r) => r._measurement == \"prediction\")\r\n|> filter(fn: (r) => r[\"pid\"] == \"${Pid:json}\")\r\n|> filter(fn: (r) => r._field == \"quality\")\r\n|> keep(columns: [\"_value\"])",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "quality"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "pid",
              "operator": "=~",
              "value": "/^$Pid$/"
            }
          ]
        }
      ],
      "title": "Forecast quality @24h ahead",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "description": "Forecast of P50 at all tAheads",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Power [MW]",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "1.0 Hours Ahead"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#3f6833",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "24.0 Hours Ahead"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#9ac48a",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "4.0 Hours Ahead"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#629e51",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "47.0 Hours Ahead"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#b7dbab",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "8.0 Hours Ahead"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#7eb26d",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Confidence"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#eab839",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Confidence_24h"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#eab839",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Confidence_hist"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#eab839",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Forecast"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#ef843c",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Realised"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#bf1b00",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Confidence"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "Lower bound"
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Lower bound"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Lowerbound_hist"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Confidence_hist"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "Lowerbound_hist"
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Lowerbound_hist"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/Realised*/"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#AD0317",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Realised - Total"
            },
            "properties": [
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    1,
                    1
                  ],
                  "fill": "dash"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "50.0 Hours Ahead"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#b2deac",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "144.0 Hours Ahead"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#e3f2e3",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 0,
        "y": 8
      },
      "id": 108,
      "interval": "15m",
      "links": [],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.3",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "vowSQsa4z"
          },
          "hide": false,
          "query": "positive_systems = from(bucket: \"realised/autogen\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"power\")\r\n|> filter(fn: (r) => r[\"system\"] =~ /^${Systems:regex}$/ and r[\"system\"] !~ /^${PolarityFactorFlippedSystems:regex}$/)\r\n|> filter(fn: (r) => r._field == \"output\")\r\n|> aggregateWindow(every: 15m, fn: mean, createEmpty: true, timeSrc: \"_stop\")\r\n// Define helper function for multiplication\r\nmultiplyByX = (x, tables=<-) => tables\r\n    |> map(fn: (r) => ({r with _value: r._value * x}))\r\nnegative_systems = from(bucket: \"realised/autogen\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"power\")\r\n|> filter(fn: (r) => r[\"system\"] =~ /^${PolarityFactorFlippedSystems:regex}$/)\r\n|> filter(fn: (r) => r._field == \"output\")\r\n|> aggregateWindow(every: 15m, fn: mean, createEmpty: true, timeSrc: \"_stop\")\r\ninverted_negative_systems = negative_systems |> multiplyByX(x: -1.0)  \r\n// Calculate total\r\ncombined = \r\nunion(tables: [inverted_negative_systems, positive_systems]) \r\n|> drop(columns: [\"system\"]) \r\n|> aggregateWindow(every: 15m, fn: sum, createEmpty: true, timeSrc: \"_start\")\r\n// Show results\r\ncombined",
          "refId": "Total Load"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "vowSQsa4z"
          },
          "hide": false,
          "query": "from(bucket: \"forecast_latest/autogen\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"prediction_tAheads\")\r\n  |> filter(fn: (r) => r[\"pid\"] == \"${Pid:json}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"quantile_P50\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: true)\r\n  |> keep(columns: [\"_time\", \"_field\",\"_value\",\"tAhead\"])",
          "refId": "Predictions P50 all taheads"
        }
      ],
      "title": "Realised and P50 at all tAheads - $Prediction_name (pid: $Pid)",
      "transformations": [
        {
          "id": "joinByField",
          "options": {
            "byField": "Time",
            "mode": "outer"
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "output {name=\"power\", type=\"measurement\"}": "Realised",
              "quantile_P50 {tAhead=\"0.0\"}": "0.0 Hours Ahead",
              "quantile_P50 {tAhead=\"1.0\"}": "1.0 Hours Ahead",
              "quantile_P50 {tAhead=\"144.0\"}": "144.0 Hours Ahead",
              "quantile_P50 {tAhead=\"24.0\"}": "24.0 Hours Ahead",
              "quantile_P50 {tAhead=\"4.0\"}": "4.0 Hours Ahead",
              "quantile_P50 {tAhead=\"47.0\"}": "47.0 Hours Ahead",
              "quantile_P50 {tAhead=\"50.0\"}": "50.0 Hours Ahead",
              "quantile_P50 {tAhead=\"8.0\"}": "8.0 Hours Ahead"
            }
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "000000005"
      },
      "description": "If the prediction is used for TenneT, an EAN is included. Otherwise (usually) not.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "string"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 11,
        "y": 8
      },
      "id": 105,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "first"
          ],
          "fields": "/^ean$/",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "9.5.1",
      "targets": [
        {
          "datasource": {
            "type": "mysql",
            "uid": "000000005"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  created AS \"time\",\n  ean\nFROM predictions\nWHERE\n  id = $Pid\nORDER BY created",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "ean"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "predictions",
          "timeColumn": "created",
          "timeColumnType": "datetime",
          "where": [
            {
              "datatype": "int",
              "name": "",
              "params": [
                "id",
                "=",
                "$Pid"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "EAN (if any)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "elasticsearch",
        "uid": "000000020"
      },
      "description": "Relatieve gewichten van het getrainde model. Het oppervlak geeft de *gain* aan, de kleur de _occurence_",
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 15,
        "y": 8
      },
      "id": 12,
      "links": [],
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<iframe width=\"100%\" height=\"270\" id=\"gmap_canvas\" src=\"https://acc-dashboard.icarus.energy/trained_models/$Pid/weight_plot.html\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe>",
        "mode": "html"
      },
      "pluginVersion": "9.5.1",
      "repeat": "Predictions",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "elasticsearch",
            "uid": "000000020"
          },
          "refId": "A"
        }
      ],
      "title": "Feature importance - $Prediction_name (pid: $Pid)",
      "type": "text"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "000000005"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 11,
        "y": 10
      },
      "id": 101,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^api_key$/",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "9.5.1",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "mysql",
            "uid": "000000005"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  api_key\nFROM customersApiKeys\nWHERE\n  cid = $cid",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "cid"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "customersApiKeys",
          "timeColumn": "cid",
          "timeColumnType": "int",
          "where": [
            {
              "name": "$__unixEpochFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "API key (if any)",
      "type": "stat"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "type": "influxdb",
        "uid": "vowSQsa4z"
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 10,
        "w": 4,
        "x": 11,
        "y": 12
      },
      "hiddenSeries": false,
      "id": 103,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "9.5.1",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "vowSQsa4z"
          },
          "query": "from(bucket: \"forecast_latest/autogen\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"prediction\")\r\n  |> filter(fn: (r) => r[\"pid\"] == \"${Pid:json}\")\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /forecast/)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Split components - $Prediction_name (pid: $Pid)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:45",
          "format": "short",
          "label": "Power [MW]",
          "logBase": 1,
          "show": true
        },
        {
          "$$hashKey": "object:46",
          "format": "short",
          "label": "",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "description": "Forecast and Confidence. Confidences in the past are of $SpecificTAhead",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Power [MW]",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Forecast"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#ef843c",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Realised"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#bf1b00",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P05"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "super-light-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P95"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "super-light-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P90"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P70"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P30"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "quantile_P10"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 0,
        "y": 16
      },
      "id": 28,
      "interval": "15m",
      "links": [],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.3",
      "repeat": "Predictions",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "vowSQsa4z"
          },
          "hide": false,
          "query": "positive_systems = from(bucket: \"realised/autogen\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"power\")\r\n|> filter(fn: (r) => r[\"system\"] =~ /^${Systems:regex}$/ and r[\"system\"] !~ /^${PolarityFactorFlippedSystems:regex}$/)\r\n|> filter(fn: (r) => r._field == \"output\")\r\n|> aggregateWindow(every: 15m, fn: mean, createEmpty: true, timeSrc: \"_stop\")\r\n// Define helper function for multiplication\r\nmultiplyByX = (x, tables=<-) => tables\r\n    |> map(fn: (r) => ({r with _value: r._value * x}))\r\nnegative_systems = from(bucket: \"realised/autogen\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"power\")\r\n|> filter(fn: (r) => r[\"system\"] =~ /^${PolarityFactorFlippedSystems:regex}$/)\r\n|> filter(fn: (r) => r._field == \"output\")\r\n|> aggregateWindow(every: 15m, fn: mean, createEmpty: true, timeSrc: \"_stop\")\r\ninverted_negative_systems = negative_systems |> multiplyByX(x: -1.0)  \r\n// Calculate total\r\ncombined = \r\nunion(tables: [inverted_negative_systems, positive_systems]) \r\n|> drop(columns: [\"system\"]) \r\n|> aggregateWindow(every: 15m, fn: sum, createEmpty: true, timeSrc: \"_start\")\r\n// Show results\r\ncombined |> keep(columns: [\"_time\", \"_field\", \"_value\"])",
          "refId": "Total Load"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "vowSQsa4z"
          },
          "hide": false,
          "query": "from(bucket: \"forecast_latest/autogen\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"prediction_tAheads\")\r\n  |> filter(fn: (r) => r[\"pid\"] == \"${Pid:json}\")\r\n  |> filter(fn: (r) => r[\"tAhead\"] == \"${SpecifcTAhead:json}\")\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /quantile_P/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: true)\r\n  |> keep(columns: [\"_time\", \"_field\", \"_value\"])",
          "refId": "Forecast at specific tAhead"
        }
      ],
      "title": "Quantiles: Forecast and Realised Specific tAhead - $Prediction_name (pid: $Pid)",
      "transformations": [
        {
          "id": "joinByField",
          "options": {
            "byField": "Time",
            "mode": "outer"
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "output": "Realised",
              "quantile_P50": "Forecast"
            }
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "elasticsearch",
        "uid": "000000020"
      },
      "description": "",
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 15,
        "y": 16
      },
      "id": 98,
      "links": [],
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<iframe width=\"100%\" height=\"300\" id=\"gmap_canvas\" src=\"https://dashboard.icarus.energy/trained_models/$Pid/Predictor47.0.html\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe>",
        "mode": "html"
      },
      "pluginVersion": "9.5.1",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "elasticsearch",
            "uid": "000000020"
          },
          "refId": "A"
        }
      ],
      "title": "Predictor 47 hour - $Prediction_name (pid: $Pid)",
      "type": "text"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "description": "Forecast and Confidence. Confidences in the past are of $SpecificTAhead",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Power [MW]",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "4.0 Hours Ahead"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#629e51",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "47.0 Hours Ahead"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#b7dbab",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Confidence"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#eab839",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Confidence_hist"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#eab839",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Forecast"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#ef843c",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Confidence"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "Lower bound"
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Lower bound"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Confidence_hist"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "Lowerbound_hist"
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "sigma_stdev"
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": true
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "stdev"
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": true
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "Total load"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Realised"
              },
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    1,
                    1
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 0,
        "y": 24
      },
      "id": 107,
      "interval": "15m",
      "links": [],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.3",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "vowSQsa4z"
          },
          "hide": false,
          "query": "positive_systems = from(bucket: \"realised/autogen\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"power\")\r\n|> filter(fn: (r) => r[\"system\"] =~ /^${Systems:regex}$/ and r[\"system\"] !~ /^${PolarityFactorFlippedSystems:regex}$/)\r\n|> filter(fn: (r) => r._field == \"output\")\r\n|> aggregateWindow(every: 15m, fn: mean, createEmpty: true, timeSrc: \"_stop\")\r\n// Define helper function for multiplication\r\nmultiplyByX = (x, tables=<-) => tables\r\n    |> map(fn: (r) => ({r with _value: r._value * x}))\r\nnegative_systems = from(bucket: \"realised/autogen\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"power\")\r\n|> filter(fn: (r) => r[\"system\"] =~ /^${PolarityFactorFlippedSystems:regex}$/)\r\n|> filter(fn: (r) => r._field == \"output\")\r\n|> aggregateWindow(every: 15m, fn: mean, createEmpty: true, timeSrc: \"_stop\")\r\ninverted_negative_systems = negative_systems |> multiplyByX(x: -1.0)  \r\n// Calculate total\r\ncombined = \r\nunion(tables: [inverted_negative_systems, positive_systems]) \r\n|> drop(columns: [\"system\"]) \r\n|> aggregateWindow(every: 15m, fn: sum, createEmpty: true, timeSrc: \"_start\")\r\n// Show results\r\ncombined |> rename(columns: {\"_field\":\"Realised\"})\r\n",
          "refId": "Total load"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "vowSQsa4z"
          },
          "hide": false,
          "query": "forecast = from(bucket: \"forecast_latest/autogen\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"prediction_tAheads\")\r\n  |> filter(fn: (r) => r.pid == \"${Pid:json}\")\r\n  |> filter(fn: (r) => r[\"tAhead\"] == \"${SpecifcTAhead}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"forecast\" or r[\"_field\"] == \"stdev\")\r\n  |> keep(columns: [\"_time\", \"_field\", \"_value\"])\r\n  |> aggregateWindow(every: 15m, fn: mean, createEmpty: true)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> keep(columns: [\"_time\", \"forecast\", \"stdev\"]) |> rename(columns: {\"forecast\": \"Forecast\"})\r\n\r\n  forecast",
          "refId": "F"
        }
      ],
      "title": "StDev: Forecast and Realised Specific tAhead - $Prediction_name (pid: $Pid)",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "alias": "sigma_stdev",
            "binary": {
              "left": "stdev",
              "operator": "*",
              "reducer": "sum",
              "right": "${Sigma}"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            },
            "replaceFields": false
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Confidence",
            "binary": {
              "left": "Forecast",
              "reducer": "sum",
              "right": "sigma_stdev"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Lower bound",
            "binary": {
              "left": "Forecast",
              "operator": "-",
              "reducer": "sum",
              "right": "sigma_stdev"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "elasticsearch",
        "uid": "000000020"
      },
      "description": "",
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 15,
        "y": 24
      },
      "id": 97,
      "links": [],
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<iframe width=\"100%\" height=\"300\" id=\"gmap_canvas\" src=\"https://dashboard.icarus.energy/trained_models/$Pid/Predictor0.25.html\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe>",
        "mode": "html"
      },
      "pluginVersion": "9.5.1",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "elasticsearch",
            "uid": "000000020"
          },
          "refId": "A"
        }
      ],
      "title": "Predictor 15 min - $Prediction_name (pid: $Pid)",
      "type": "text"
    }
  ],
  "refresh": "",
  "revision": 1,
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "Wolvega",
          "value": "Wolvega"
        },
        "datasource": {
          "type": "mysql",
          "uid": "000000005"
        },
        "definition": "SELECT p.name from predictions p where p.active=1",
        "hide": 0,
        "includeAll": false,
        "label": "Prediction",
        "multi": false,
        "name": "Prediction_name",
        "options": [],
        "query": "SELECT p.name from predictions p where p.active=1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "330",
          "value": "330"
        },
        "datasource": {
          "type": "mysql",
          "uid": "000000005"
        },
        "definition": "SELECT id from predictions where name in ('$Prediction_name')",
        "hide": 0,
        "includeAll": false,
        "label": "Pid",
        "multi": false,
        "name": "Pid",
        "options": [],
        "query": "SELECT id from predictions where name in ('$Prediction_name')",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "1",
          "value": "1"
        },
        "datasource": {
          "type": "mysql",
          "uid": "000000005"
        },
        "definition": "",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "Sigma",
        "options": [],
        "query": "select case $Confidence when 98 then 2 when 66 then 1 when 0 then 0 end as sigma",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "mysql",
          "uid": "000000005"
        },
        "definition": "SELECT s.sid \nFROM systems s LEFT JOIN predictions_systems ps ON ps.system_id = s.sid LEFT JOIN predictions p on ps.prediction_id = p.id \nWHERE p.id='$Pid'",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "Systems",
        "options": [],
        "query": "SELECT s.sid \nFROM systems s LEFT JOIN predictions_systems ps ON ps.system_id = s.sid LEFT JOIN predictions p on ps.prediction_id = p.id \nWHERE p.id='$Pid'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": true,
          "text": "66",
          "value": "66"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Confidence [%]",
        "multi": false,
        "name": "Confidence",
        "options": [
          {
            "selected": false,
            "text": "0",
            "value": "0"
          },
          {
            "selected": true,
            "text": "66",
            "value": "66"
          },
          {
            "selected": false,
            "text": "98",
            "value": "98"
          }
        ],
        "query": "0,66,98",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": false,
          "text": "24.0",
          "value": "24.0"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "vowSQsa4z"
        },
        "definition": "from(bucket: \"forecast_latest/autogen\")\r\n|> range(start: v.timeRangeStart)\r\n|> filter(fn: (r) => r._measurement == \"prediction_tAheads\")\r\n|> filter(fn: (r) => r.pid == \"${Pid:json}\")\r\n|> keyValues(keyColumns: [\"tAhead\"])\r\n|> group()\r\n|> keep(columns: [\"tAhead\"])\r\n|> distinct(column: \"tAhead\")",
        "hide": 0,
        "includeAll": false,
        "label": "SpecifcTAhead",
        "multi": false,
        "name": "SpecifcTAhead",
        "options": [],
        "query": "from(bucket: \"forecast_latest/autogen\")\r\n|> range(start: v.timeRangeStart)\r\n|> filter(fn: (r) => r._measurement == \"prediction_tAheads\")\r\n|> filter(fn: (r) => r.pid == \"${Pid:json}\")\r\n|> keyValues(keyColumns: [\"tAhead\"])\r\n|> group()\r\n|> keep(columns: [\"tAhead\"])\r\n|> distinct(column: \"tAhead\")",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "mysql",
          "uid": "000000005"
        },
        "definition": "SELECT s.sid \nFROM \n\tsystems AS s INNER JOIN predictions_systems AS ps ON ps.system_id = s.sid \nWHERE (s.polarity * ps.factor) < 0 and ps.prediction_id = $Pid",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "PolarityFactorFlippedSystems",
        "options": [],
        "query": "SELECT s.sid \nFROM \n\tsystems AS s INNER JOIN predictions_systems AS ps ON ps.system_id = s.sid \nWHERE (s.polarity * ps.factor) < 0 and ps.prediction_id = $Pid",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "5.9722174",
          "value": "5.9722174"
        },
        "datasource": {
          "type": "mysql",
          "uid": "000000005"
        },
        "definition": "SELECT max(lon) as lon FROM systems WHERE sid IN ($Systems)",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "lon",
        "options": [],
        "query": "SELECT max(lon) as lon FROM systems WHERE sid IN ($Systems)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "52.8720124",
          "value": "52.8720124"
        },
        "datasource": {
          "type": "mysql",
          "uid": "000000005"
        },
        "definition": "SELECT max(lat) FROM systems WHERE sid IN ($Systems)",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "lat",
        "options": [],
        "query": "SELECT max(lat) FROM systems WHERE sid IN ($Systems)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "325",
          "value": "325"
        },
        "datasource": {
          "type": "mysql",
          "uid": "000000005"
        },
        "definition": "SELECT customer_id FROM `customers_predictions` where prediction_id=$Pid group by customer_id ",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "cid",
        "options": [],
        "query": "SELECT customer_id FROM `customers_predictions` where prediction_id=$Pid group by customer_id ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now+2d"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Station forecasts",
  "uid": null,
  "version": 0,
  "weekStart": ""
}